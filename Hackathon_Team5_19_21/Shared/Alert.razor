@if (IsVisible)
{
    <div class="alert alert-@Classe">
        @ChildContent
        <button type="button" class="close" @onclick="(() => Chiudi())">
            <span>&times;</span>
        </button>
    </div>
}

@code {
    public enum TypeMessage { Danger, Warning, Success, Primary, Secondary, Info, Light, Dark }
    [Parameter]
    public TypeMessage Type { get; set; }
    [Parameter]
    public bool IsVisible { get; set; }
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    protected override void OnInitialized()
    {
        switch (Type)
        {
            case TypeMessage.Danger:
                Classe = "danger";
                break;
            case TypeMessage.Warning:
                Classe = "warning";
                break;
            case TypeMessage.Success:
                Classe = "success";
                break;
            case TypeMessage.Primary:
                Classe = "primary";
                break;
            case TypeMessage.Info:
                Classe = "info";
                break;
            case TypeMessage.Dark:
                Classe = "dark";
                break;
            case TypeMessage.Secondary:
                Classe = "secondary";
                break;
            case TypeMessage.Light:
                Classe = "light";
                break;
        }
    }

    string Classe = "";

    private void Chiudi()
    {
        IsVisible = false;
    }
}
