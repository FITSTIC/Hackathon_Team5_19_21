@if (Model.IsVisible)
{
    switch (Model.TypeMessage)
    {
        case Color.Danger:
            <div class="alert alert-danger d-flex flex-row justify-content-between align-items-center">
                @Model.Message
                <button type="button" class="close" @onclick="()=>ChiudiAlert()">
                    <span>&times;</span>
                </button>
            </div>
            break;
        case Color.Warning:
            <div class="alert alert-warning d-flex flex-row justify-content-between align-items-center">
                @Model.Message
                <button type="button" class="close" @onclick="()=>ChiudiAlert()">
                    <span>&times;</span>
                </button>
            </div>
            break;
        case Color.Success:
            <div class="alert alert-success d-flex flex-row justify-content-between align-items-center">
                @Model.Message
                <button type="button" class="close" @onclick="()=>ChiudiAlert()">
                    <span>&times;</span>
                </button>
            </div>
            break;
        case Color.Primary:
            <div class="alert alert-primary d-flex flex-row justify-content-between align-items-center">
                @Model.Message
                <button type="button" class="close" @onclick="()=>ChiudiAlert()">
                    <span>&times;</span>
                </button>
            </div>
            break;
        case Color.Info:
            <div class="alert alert-info d-flex flex-row justify-content-between align-items-center">
                @Model.Message
                <button type="button" class="close" @onclick="()=>ChiudiAlert()">
                    <span>&times;</span>
                </button>
            </div>
            break;
        case Color.Dark:
            <div class="alert alert-dark d-flex flex-row justify-content-between align-items-center">
                @Model.Message
                <button type="button" class="close" @onclick="()=>ChiudiAlert()">
                    <span>&times;</span>
                </button>
            </div>
            break;
        case Color.Secondary:
            <div class="alert alert-secondary d-flex flex-row justify-content-between align-items-center">
                @Model.Message
                <button type="button" class="close" @onclick="()=>ChiudiAlert()">
                    <span>&times;</span>
                </button>
            </div>
            break;
        case Color.Light:
            <div class="alert alert-light d-flex flex-row justify-content-between align-items-center">
                @Model.Message
                <button type="button" class="close" @onclick="()=>ChiudiAlert()">
                    <span>&times;</span>
                </button>
            </div>
            break;
    }
}

@code {
    
    [Parameter]
    public AlertSettings Model { get; set; }

    public void ChiudiAlert()
    {
        Model.IsVisible = false;
        StateHasChanged();
    }

}
