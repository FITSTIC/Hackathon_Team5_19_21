@layout LoginLayout
@page "/recupera-password"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject ApplicationDbContext db
@using System.Net.Mail
<!-- Outer Row -->

<div class="col-lg-6">
    <div class="p-5">
        <div class="text-center">
            <h1 class="h4 text-gray-900 mb-4">Recupera Password</h1>
        </div>
        <Alert Model="@AlertRecuperaPassword"></Alert>
        <EditForm Model="@Utente" OnSubmit="() => InviaEmail()" class="user">
            <div class="form-group">
                <input type="email" class="form-control form-control-user" @bind="Utente.Email" required placeholder="Email Address...">
            </div>
            <button type="submit" class="btn btn-primary btn-user btn-block">
                Recupera Password
            </button>

        </EditForm>
        <hr />
        <div class="text-center">
            <a class="small" href="">Indietro</a>
        </div>
    </div>
</div>


@code {
    User Utente { get; set; }
    AlertSettings AlertRecuperaPassword = new AlertSettings();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    protected async override Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
        if (user.Identity.IsAuthenticated) NavigationManager.NavigateTo("/index");
        Utente = new User();
    }

    private async Task InviaEmail()
    {
        Amministratore admin = await db.Amministratori.FirstOrDefaultAsync(x => x.Email == Utente.Email);
        if (admin != null)
        {
            try
            {
                var nuovaPassword = admin.Password.Sha256().Substring(0, 16);
                admin.Password = nuovaPassword.Sha256();
                admin.PrimaPassword = true;

                MailMessage mail = new MailMessage();
                SmtpClient SmtpServer = new SmtpClient("smtp.gmail.com", 25);

                mail.From = new MailAddress("projectw319@gmail.com");
                mail.To.Add(Utente.Email);
                mail.Subject = "Recupera Password";
                mail.Body = "Nuova password: " + nuovaPassword;
                mail.IsBodyHtml = true;
                mail.Priority = MailPriority.High;

                SmtpServer.DeliveryMethod = SmtpDeliveryMethod.Network;
                SmtpServer.UseDefaultCredentials = false;
                SmtpServer.Timeout = 20000;
                SmtpServer.Credentials = new System.Net.NetworkCredential("projectw319@gmail.com", "Informatica.");
                SmtpServer.EnableSsl = true;

                await SmtpServer.SendMailAsync(mail);
                await db.SaveChangesAsync();
                AlertRecuperaPassword = new AlertSettings() { IsVisible = true, Message = "Ti abbiamo inviato un\'email all\'indirizzo specificato contenente una nuova password", TypeMessage = Color.Success };
            }
            catch
            {
                AlertRecuperaPassword = new AlertSettings() { IsVisible = true, Message = "Si è verificato un errore durante l\'invio dell\'email", TypeMessage = Color.Danger };
            }
        }
        else AlertRecuperaPassword = new AlertSettings() { IsVisible = true, Message = "L\'indirizzo email inserito non è stato trovato", TypeMessage = Color.Danger };
    }
}
