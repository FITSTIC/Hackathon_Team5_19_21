@page "/corsi"

@inject IServizioCorsi ServizioCorsi
@inject IServizioPersonaleFitstic ServizioPersonaleFitstic
@inject IServizioCitta ServizioCitta

<h1 class="mb-4">Corsi</h1>
<Card>
    <CardHeader>
        <h6 class="m-0 font-weight-bold text-primary">Corsi</h6>
        <a href="/corsi/create" class="btn btn-success">Aggiungi</a>
    </CardHeader>
    <CardBody>
        <Table Items="corsi">
            <TableHeader>
                <th>ID</th>
                <th>Nome</th>
                <th>Anno di Inizio</th>
                <th>Anno di Fine</th>
                <th>Citta</th>
                <th>Organizzatore</th>
                <th></th>
            </TableHeader>
            <RowTemplate>
                <td class="align-middle">@context.Id</td>
                <td class="align-middle">@context.Nome</td>
                <td class="align-middle">@context.AnnoInizio</td>
                <td class="align-middle">@context.AnnoFine</td>
                <td class="align-middle">@ServizioCitta.GetCittaById((int)context.IdCitta).Result.Nome (@ServizioCitta.GetProvinciaByIdCitta((int)context.IdCitta).Result.Sigla)</td>
                <td class="align-middle">@ServizioPersonaleFitstic.GetPersonaById((int)context.IdOrganizzatore).Result.Nome  @ServizioPersonaleFitstic.GetPersonaById((int)context.IdOrganizzatore).Result.Cognome </td>
                <td class="align-middle"><a href="/corsi/view/@context.Id" class="btn btn-primary">Dettaglio</a></td>
            </RowTemplate>
        </Table>
    </CardBody>
</Card>

@code {
    List<Corso> corsi;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected async override Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
        if (user.Identity.IsAuthenticated)corsi = await ServizioCorsi.GetCorsi();
        else NavigationManager.NavigateTo("/");
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) await JSRuntime.InvokeVoidAsync("GeneraDataTable", 6);
    }

    
}
