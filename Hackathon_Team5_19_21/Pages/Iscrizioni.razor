@page "/iscrizioni"

@inject IServizioCorsi ServizioCorsi
@inject IServizioStudenti ServizioStudenti


<h1 class="mb-4">Iscrizioni</h1>
@if (corsi != null)
{
    @foreach (var corso in corsi)
    {
        <Card>
            <CardHeader>
                <h6 class="m-0 font-weight-bold text-primary">@corso.Nome @corso.AnnoInizio - @corso.AnnoFine</h6>
                <a href="/iscrizioni/create/@corso.Id" class="btn btn-success">Aggiungi</a>
            </CardHeader>
            <CardBody>
                <Table Items="ServizioStudenti.GetStudentiDelCorso(corso).Result">
                    <TableHeader>
                        <th>ID</th>
                        <th>Nome</th>
                        <th>Cognome</th>
                        <th>Data Iscrizione</th>
                        <th>Stato</th>
                        <th>Voto Finale</th>
                        <th></th>
                    </TableHeader>
                    <RowTemplate>
                        <td>@context.Id</td>
                        <td>@context.Nome</td>
                        <td>@context.Cognome</td>
                        <td>@context.DataIscrizione.ToShortDateString()</td>
                        <td>@ServizioStudenti.StatoToString(context)</td>
                        <td>@context.VotoFinale</td>
                        <td><a href="/iscrizioni/view/@context.Id" class="btn btn-primary">Dettaglio</a></td>
                    </RowTemplate>
                </Table>
            </CardBody>
        </Card>
    }

}

@code {
    List<Corso> corsi;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected async override Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
        if (user.Identity.IsAuthenticated) corsi = await ServizioCorsi.GetCorsiAttuali();
        else NavigationManager.NavigateTo("/");

    }
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) await JSRuntime.InvokeVoidAsync("GeneraDataTable", 6);
    }



}
