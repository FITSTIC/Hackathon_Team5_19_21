@page "/personale"

@using Hackathon_Team5_19_21.Data
@inject ApplicationDbContext db
@inject IServizioPersonaleFitstic ServizioPersonaleFitstic
@inject IJSRuntime IJSRuntime
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<h1>Personale</h1>

<p>Visualizza il personale</p>

@if (personale == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Personale Fitstic</h6>
            <a href="/personale/create" class="btn btn-success">Aggiungi</a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="elencoPersonale" class="table table-bordered text-center">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Nome</th>
                            <th>Cognome</th>
                            <th>Data Nascita</th>
                            <th>Data Assunzione</th>
                            <th>Docente</th>
                            <th>Organizzatore</th>
                            <th>Tutor</th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var persona in personale)
                        {
                            <tr>
                                <td class="align-middle">@persona.Id</td>
                                <td class="align-middle">@persona.Nome</td>
                                <td class="align-middle">@persona.Cognome</td>
                                <td class="align-middle">@persona.DataNascita.ToShortDateString()</td>
                                <td class="align-middle">@persona.DataAssunzione.ToShortDateString()</td>
                                <td class="align-middle">@persona.Docente</td>
                                <td class="align-middle">@persona.Organizzatore</td>
                                <td class="align-middle">@persona.Tutor</td>
                                <td class="align-middle"><a href="/personale/view/@persona.Id" class="btn btn-primary">Modifica</a></td>
                                <td class="align-middle"><button type="button" class="btn btn-danger" @onclick="() => BtnElimina_Click(persona)">Elimina</button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
@code {

    List<PersonaFitstic> personale;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected async override Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
        if (user.Identity.IsAuthenticated) personale = await ServizioPersonaleFitstic.GetPersonale(db);
        else NavigationManager.NavigateTo("/");
    }
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender) await IJSRuntime.InvokeVoidAsync("GeneraDataTablePersonale");
    }

    protected async Task BtnElimina_Click(PersonaFitstic p)
    {
        await ServizioPersonaleFitstic.EliminaPersona(db, p);
        personale = await ServizioPersonaleFitstic.GetPersonale(db);
        StateHasChanged();

    }

}
